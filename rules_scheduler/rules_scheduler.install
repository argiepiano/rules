<?php
/**
 * @file
 * Rules Scheduler - Installation file.
 */

/**
 * Implements hook_schema().
 */
function rules_scheduler_schema() {
  $schema['rules_scheduler'] = array(
    'description' => 'Stores scheduled tasks.',
    'fields' => array(
      'tid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "The scheduled task's id.",
      ),
      'config' => array(
        'type' => 'varchar',
        'length' => '64',
        'default' => '',
        'not null' => TRUE,
        'description' => "The scheduled configuration's name.",
      ),
      'date' => array(
        'description' => 'The Unix timestamp of when the task is to be scheduled.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'data' => array(
        'type' => 'blob',
        'size' => 'big',
        'not null' => FALSE,
        'serialize' => TRUE,
        'description' => 'The whole, serialized evaluation data.',
      ),
      'identifier' => array(
        'type' => 'varchar',
        'length' => '255',
        'default' => '',
        'not null' => FALSE,
        'description' => 'The user defined string identifying this task.',
      ),
      'handler' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
        'description' => 'The fully-qualified class name of the queue item handler.',
      ),
    ),
    'primary key' => array('tid'),
    'indexes' => array(
      'date' => array('date'),
    ),
    'unique key' => array(
      'id' => array('config', 'identifier'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function rules_scheduler_install() {
  // Create the queue to hold scheduled tasks.
  $queue = BackdropQueue::get('rules_scheduler_tasks', TRUE);
  $queue->createQueue();
}

/**
 * Implements hook_uninstall().
 */
function rules_scheduler_uninstall() {
  // Clean up after ourselves by deleting the queue and all items in it.
  $queue = BackdropQueue::get('rules_scheduler_tasks');
  $queue->deleteQueue();
}

/**
 * Implements hook_update_last_removed().
 */
function rules_scheduler_update_last_removed() {
  return 7204;
}

/**
 * Move book settings from variables to config.
 */
function rules_scheduler_update_1000() {
  // Migrate variables to config.
}

/**
 * Use blob:big for rules_scheduler.data for compatibility with D7 upgrades.
 */
function rules_scheduler_update_1200() {
  if (db_field_exists('rules_scheduler', 'data')) {
    db_change_field('rules_scheduler', 'data', 'data', array(
      'type' => 'blob',
      'size' => 'big',
      'not null' => FALSE,
      'serialize' => TRUE,
      'description' => 'The whole, serialized evaluation data.',
    ));
  }
}

/**
 * Install Rules Schedule view if missing.
 */
function rules_scheduler_update_1201() {
  $view = views_get_view('rules_scheduler');
  if (!$view) {
    $config = config('views.view.rules_scheduler');
    $data = '{
    "_config_name": "views.view.rules_scheduler",
    "name": "rules_scheduler",
    "description": "Scheduled Rules components",
    "tag": "admin, rules_scheduler",
    "base_table": "rules_scheduler",
    "core": "0",
    "human_name": "Rules Schedule",
    "display": {
        "default": {
            "display_title": "Defaults",
            "display_plugin": "default",
            "display_options": {
                "query": {
                    "type": "views_query",
                    "options": []
                },
                "use_more_always": false,
                "access": {
                    "type": "perm",
                    "perm": "administer rules"
                },
                "cache": {
                    "type": "none"
                },
                "exposed_form": {
                    "type": "basic"
                },
                "pager": {
                    "type": "full",
                    "options": {
                        "items_per_page": "30",
                        "offset": "0",
                        "id": "0"
                    }
                },
                "style_plugin": "table",
                "style_options": {
                    "columns": {
                        "tid": "tid",
                        "config": "config",
                        "date": "date",
                        "identifier": "identifier",
                        "nothing": "nothing"
                    },
                    "default": "date",
                    "info": {
                        "tid": {
                            "sortable": 0,
                            "default_sort_order": "asc",
                            "align": "",
                            "separator": ""
                        },
                        "config": {
                            "sortable": 1,
                            "default_sort_order": "asc",
                            "align": "",
                            "separator": ""
                        },
                        "date": {
                            "sortable": 1,
                            "default_sort_order": "asc",
                            "align": "",
                            "separator": ""
                        },
                        "identifier": {
                            "sortable": 1,
                            "default_sort_order": "asc",
                            "align": "",
                            "separator": ""
                        },
                        "nothing": {
                            "align": "",
                            "separator": ""
                        }
                    }
                },
                "empty": {
                    "area": {
                        "id": "area",
                        "table": "views",
                        "field": "area",
                        "content": "No tasks have been scheduled.",
                        "format": "plain_text"
                    }
                },
                "fields": {
                    "tid": {
                        "id": "tid",
                        "table": "rules_scheduler",
                        "field": "tid"
                    },
                    "config": {
                        "id": "config",
                        "table": "rules_scheduler",
                        "field": "config",
                        "alter": {
                            "make_link": true,
                            "path": "admin/config/workflow/rules/components/manage/[config]"
                        }
                    },
                    "date": {
                        "id": "date",
                        "table": "rules_scheduler",
                        "field": "date"
                    },
                    "identifier": {
                        "id": "identifier",
                        "table": "rules_scheduler",
                        "field": "identifier"
                    },
                    "nothing": {
                        "id": "nothing",
                        "table": "views",
                        "field": "nothing",
                        "label": "Operations",
                        "alter": {
                            "text": "delete",
                            "make_link": true,
                            "path": "admin/config/workflow/rules/schedule/[tid]/delete",
                            "alt": "Delete this scheduled task"
                        }
                    }
                },
                "sorts": {
                    "date": {
                        "id": "date",
                        "table": "rules_scheduler",
                        "field": "date"
                    }
                },
                "arguments": {
                    "config": {
                        "id": "config",
                        "table": "rules_scheduler",
                        "field": "config",
                        "default_argument_type": "fixed",
                        "summary": {
                            "format": "default_summary"
                        },
                        "limit": "0"
                    }
                },
                "filters": {
                    "config": {
                        "id": "config",
                        "table": "rules_scheduler",
                        "field": "config",
                        "exposed": true,
                        "expose": {
                            "operator_id": "config_op",
                            "label": "Component filter",
                            "operator": "config_op",
                            "identifier": "config",
                            "remember": true
                        }
                    }
                }
            }
        }
    }
}';
    $data = backdrop_json_decode($data);
    $config->setData($data);
    $config->save();
  }
}
